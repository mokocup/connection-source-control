services:
  api:
    build: .
    restart: unless-stopped
    # entrypoint: tail -f > /dev/null
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      - db
      - db-seed-mysql
      - db-seed-pg
      # volumes:
      # - .:/usr/src/app

  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: connection-source-control
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 30s
      interval: 5s
      timeout: 5s
      retries: 55

  db-seed-mysql:
    build:
      dockerfile: dbseed.Dockerfile
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: seed_root_password
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 30s
      interval: 5s
      timeout: 5s
      retries: 55

  db-seed-pg:
    image: mcekovic/uts-database
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 3001:8080

volumes:
  db_data:
